% Puntos relativos
puntos_relativos = [
    0, 0, 0;
    100, 0, 0;
    100, 0, 0;
    0, -100, 0;
    0, -100, 0;
    -100, 0, 0;
    -100, 0, 0;
    0, 200, 0
];

% Lista de alturas capturadas por el dron (valores aproximados para pruebas)
altura_cp =[70,180, 100, 190, 90, 180, 90,70];

% Asegurar que la longitud de altura_cp coincide con la cantidad de puntos relativos
if length(altura_cp) ~= size(puntos_relativos, 1)
    error('La lista de alturas no coincide con la cantidad de puntos relativos');
end

% Puntos absolutos (inicialmente el primer punto es el origen)
puntos_absolutos = zeros(size(puntos_relativos));

% Ajustar los puntos absolutos para que la tercera coordenada dependa de altura_cp
for i = 1:size(puntos_relativos, 1)
    if i == 1
        puntos_absolutos(i, :) = puntos_relativos(i, :);
        puntos_absolutos(i, 3) = altura_cp(i);
    else
        puntos_absolutos(i, 1) = puntos_absolutos(i-1, 1) + puntos_relativos(i, 1);
        puntos_absolutos(i, 2) = puntos_absolutos(i-1, 2) + puntos_relativos(i, 2);
        puntos_absolutos(i, 3) = altura_cp(i); % Usar la altura capturada por el dron
    end
end

% Imprimir los puntos absolutos
disp('Puntos absolutos:');
disp(puntos_absolutos);

% Crear figura
figure('Name', 'Gráfica 3D', 'NumberTitle', 'off');

% Graficar los puntos
scatter3(puntos_absolutos(:,1), puntos_absolutos(:,2), puntos_absolutos(:,3), 'r', 'filled');
hold on;

% Unir los puntos con líneas
for i = 1:size(puntos_absolutos, 1) - 1
    plot3([puntos_absolutos(i,1), puntos_absolutos(i+1,1)], ...
          [puntos_absolutos(i,2), puntos_absolutos(i+1,2)], ...
          [puntos_absolutos(i,3), puntos_absolutos(i+1,3)], 'b');
end

% Graficar el área bajo las líneas
for i = 1:size(puntos_absolutos, 1) - 1
    poly = [puntos_absolutos(i,:); puntos_absolutos(i+1,:); puntos_absolutos(i+1,1), puntos_absolutos(i+1,2), 0; puntos_absolutos(i,1), puntos_absolutos(i,2), 0];
    fill3(poly(:,1), poly(:,2), poly(:,3), 'b', 'FaceAlpha', 0.3);
end

% Configuración adicional
xlabel('X');
ylabel('Y');
zlabel('Z');
grid on;

% Mostrar la gráfica
hold off;

% Calcular el área total de la superficie
area_total = 0;

for i = 1:size(puntos_absolutos, 1) - 1
    % Definir los vértices del cuadrilátero
    A = puntos_absolutos(i,:);
    B = puntos_absolutos(i+1,:);
    C = [puntos_absolutos(i+1,1), puntos_absolutos(i+1,2), 0];
    D = [puntos_absolutos(i,1), puntos_absolutos(i,2), 0];

    % Calcular el área de cada triángulo
    area_tri_1 = 0.5 * norm(cross(B - A, C - A));
    area_tri_2 = 0.5 * norm(cross(C - A, D - A));

    % Sumar el área de los dos triángulos para obtener el área del cuadrilátero
    area_cuadrilatero = area_tri_1 + area_tri_2;

    % Sumar el área del cuadrilátero al área total
    area_total = area_total + area_cuadrilatero;
end

disp(['El área total de la superficie es: ', num2str(area_total)]);
